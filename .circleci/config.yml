# Android CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-android/ for more details
#

# Short Description
# 1) Always start with a version
# 2) Then the `jobs` key, which represents a phase in the Build-Test-Deploy process
# 3) Next comes the working directory
# 4) Then comes the Docker Image
# 5) Checkout so we can work on the code
# 6) Restore the cache and download the android dependencies
# 7) `save_cache` helps store dependencies
# 8) Run Unit tests after
version: 2
jobs:
  build:
    working_directory: ~/code

    docker:
          # Android Image Version from Docker
          - image: circleci/android:api-25-aplha

          # Specify service dependencies here if necessary
          # CircleCI maintains a library of prebuilt images
          # documented at https://circleci.com/docs/2.0/circleci-images/
          # -image: circleci/postgres:9.4

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths: ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      # run tests!
      - run:
          name: Run Tests
          command: ./gradlew lint test

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - store_test_results:
          path: app/build/test-results
